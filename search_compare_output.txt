--------------------------------
Start Of Program
--------------------------------

Enter a natural number, N, which is no larger than 1000 (to represent the total number of elements to store in the array named A): 

The value which was entered for N is 20.

Enter a nonnegative integer, T, which is no larger than 1000 (to represent the total number of states each element of A can represent exactly one of per instance): 

The value which was entered for T is 6.

--------------------------------

ARRAY A: 

A[0] := 3. // memory address of A[0] is 0x5815b19bccc0.

A[1] := 3. // memory address of A[1] is 0x5815b19bccc4.

A[2] := 3. // memory address of A[2] is 0x5815b19bccc8.

A[3] := 4. // memory address of A[3] is 0x5815b19bcccc.

A[4] := 4. // memory address of A[4] is 0x5815b19bccd0.

A[5] := 1. // memory address of A[5] is 0x5815b19bccd4.

A[6] := 5. // memory address of A[6] is 0x5815b19bccd8.

A[7] := 3. // memory address of A[7] is 0x5815b19bccdc.

A[8] := 3. // memory address of A[8] is 0x5815b19bcce0.

A[9] := 0. // memory address of A[9] is 0x5815b19bcce4.

A[10] := 1. // memory address of A[10] is 0x5815b19bcce8.

A[11] := 3. // memory address of A[11] is 0x5815b19bccec.

A[12] := 1. // memory address of A[12] is 0x5815b19bccf0.

A[13] := 5. // memory address of A[13] is 0x5815b19bccf4.

A[14] := 4. // memory address of A[14] is 0x5815b19bccf8.

A[15] := 3. // memory address of A[15] is 0x5815b19bccfc.

A[16] := 4. // memory address of A[16] is 0x5815b19bcd00.

A[17] := 1. // memory address of A[17] is 0x5815b19bcd04.

A[18] := 1. // memory address of A[18] is 0x5815b19bcd08.

A[19] := 5. // memory address of A[19] is 0x5815b19bcd0c.

--------------------------------
End Of Program
--------------------------------